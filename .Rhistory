#copying the dataset and adding names to columns
xdatanamed<- new_x_data
names(xdatanamed)<- features$V2
#add activities column from Y table to the x table
activities<-read.table("activity_labels.txt")
names(activities)<-c("activitycode","activityname")
#activities
names(new_y_data)<-"activitycode"
# combine the three data sets
cds<-merge(xdatanamed,new_y_data, by.x=0, by.y=0)
# combine the three data sets
cds<-merge(xdatanamed,new_y_data, by.x=0)
# combine the three data sets
cds<-merge(xdatanamed,new_y_data, by=0)
# combine the three data sets
new_y_data
cds<-merge(xdatanamed,new_y_data, by.x=0, by.y=0)
#add the activity name from Y file code to the x measurement file
allydata<- merge(new_y_data,activities,sort=F)
View(allydata)
View(new_x_data)
View(new_x_data1)
View(new_x_data1)
# Uses descriptive activity names to name the activities in the data set
new_x_data1<-merge(new_x_data, new_y_data, by.x=0, by.y=0)
View(new_x_data1)
xtest1<-xtest
xtest1<- seq.int(nrow(xtest1))
dim(xtest1)
xtest1<-xtest
xtest1<- seq.int(nrow(xtest1))
dim(xtest1)
#read files
xtest <- read.table("test/X_test.txt")
xtest1<-xtest
xtest1<- seq.int(nrow(xtest1))
dim(xtest1)
View(xtest)
xtest<- seq.int(nrow(xtest))
dim(xtest)
#read files
xtest <- read.table("test/X_test.txt")
xtrain<- read.table("train/X_train.txt")
new_x_data<- rbind(xtrain, xtest)
new_x_data$ID<- [1:10299]
new_x_data$ID<- seq.int(nrow(new_x_data))
dim(new_x_data)
new_x_data[,562]
xtest <- read.table("test/X_test.txt")
xtrain<- read.table("train/X_train.txt")
ytest <- read.table("test/Y_test.txt")
ytrain<- read.table("train/Y_train.txt")
subjecttest<-read.table("test/subject_test.txt")
subjecttrain<-read.table("train/subject_train.txt")
all.equal(names(xtrain), names(xtest))
all.equal(names(ytrain), names(ytest))
all.equal(names(subjecttrain), names(subjecttest))
new_x_data<- rbind(xtrain, xtest)
new_x_data$ID<- seq.int(nrow(new_x_data))
#head(new_x_data, 3)
new_y_data<- rbind(ytrain, ytest)
new_y_data$ID<- seq.int(nrow(new_y_data))
#head(new_y_data, 3)
dim(new_y_data)
dim(new_x_data)
new_subject_data<- rbind(subjecttrain, subjecttest)
new_subject_data$ID<- seq.int(nrow(new_subject_data))
dim(new_subject_data)
#Combine the x and y data
x_y_combined<- merge(new_x_data, new_y_data, by="ID")
#combine the xy with subject
xyscombined<- merge(x_y_combined,new_subject_data, by="ID")
#put the feature name as a column heading
#features file is the 561 column names
features <- read.table("features.txt", stringsAsFactors = FALSE)
#merge the two results files
new_x_data<- rbind(xtrain, xtest)
new_x_data$ID<- seq.int(nrow(new_x_data))
#head(new_x_data, 3)
new_y_data<- rbind(ytrain, ytest)
new_y_data$ID<- seq.int(nrow(new_y_data))
#head(new_y_data, 3)
dim(new_y_data)
dim(new_x_data)
new_subject_data<- rbind(subjecttrain, subjecttest)
new_subject_data$ID<- seq.int(nrow(new_subject_data))
dim(new_subject_data)
#put the feature name as a column heading
#features file is the 561 column names
features <- read.table("features.txt", stringsAsFactors = FALSE)
#copying the dataset and adding names to columns
xdatanamed<- new_x_data
names(xdatanamed)<- features$V2
feastures
features
#copying the dataset and adding names to columns
features<- c(features, "ID")
View(features)
#put the feature name as a column heading
#features file is the 561 column names
features <- read.table("features.txt", stringsAsFactors = FALSE)
#copying the dataset and adding names to columns
xdatanamed<- new_x_data
names(xdatanamed)<- features$V2
#read files
xtest <- read.table("test/X_test.txt")
xtrain<- read.table("train/X_train.txt")
ytest <- read.table("test/Y_test.txt")
ytrain<- read.table("train/Y_train.txt")
subjecttest<-read.table("test/subject_test.txt")
subjecttrain<-read.table("train/subject_train.txt")
#see if the columns match before merging
all.equal(names(xtrain), names(xtest))
all.equal(names(ytrain), names(ytest))
all.equal(names(subjecttrain), names(subjecttest))
#merge the two results files
new_x_data<- rbind(xtrain, xtest)
#new_x_data$ID<- seq.int(nrow(new_x_data))
#head(new_x_data, 3)
new_y_data<- rbind(ytrain, ytest)
new_y_data$ID<- seq.int(nrow(new_y_data))
#head(new_y_data, 3)
dim(new_y_data)
dim(new_x_data)
new_subject_data<- rbind(subjecttrain, subjecttest)
new_subject_data$ID<- seq.int(nrow(new_subject_data))
dim(new_subject_data)
#put the feature name as a column heading
#features file is the 561 column names
features <- read.table("features.txt", stringsAsFactors = FALSE)
#copying the dataset and adding names to columns
xdatanamed<- new_x_data
names(xdatanamed)<- features$V2
xdatanamed$ID<- seq.int(nrow(xdatanamed))
dim(xdatanamed)
#Combine the x and y data
x_y_combined<- merge(new_x_data, new_y_data, by="ID")
#Combine the x and y data
x_y_combined<- merge(xdatanamed, new_y_data, by="ID")
#Combine the x and y data
x_y_combined<- merge(xdatanamed, new_y_data, by.x="ID", by.y="ID")
#Combine the x and y data
x_y_combined<- merge(xdatanamed, new_y_data, by.x=0, by.y="ID")
#Combine the x and y data
x_y_combined<- merge(xdatanamed, new_y_data)
# Extracts only the measurements on the mean and standard deviation for each measurement.
allnames<- names(xdatanamed)
cnms<- grep("mean|std|ID", allnames)
s<-xdatanamed[,cnms]
names(s)
head(s$ID)
#add activities column from Y table to the x table
activities<-read.table("activity_labels.txt")
names(activities)<-c("activitycode","activityname")
#activities
names(new_y_data)<-"activitycode"
#add the activity name from Y file code to the x measurement file
allydata<- merge(new_y_data,activities,sort=F)
#identify the index
class(xdatanamed$ID)
#Combine the x and y data
x_y_combined<- merge(xdatanamed, new_y_data, by="row.names")
traceback()
#Combine the x and y data
x_y_combined<- merge(xdatanamed, new_y_data, by.x="row.names", by.y="row.names")
#Combine the x and y data
x_y_combined<- merge(xdatanamed, new_y_data, by.x=0, by.y="row.names")
traceback
#Combine the x and y data
x_y_combined<- merge(xdatanamed, new_y_data, by.x=562, by.y=2)
#add activities column from Y table to the x table
activities<-read.table("activity_labels.txt")
names(activities)<-c("activitycode","activityname")
#activities
names(new_y_data)<-"activitycode"
#add the activity name from Y file code to the x measurement file
allydata<- merge(new_y_data,activities,sort=F)
# Extracts only the measurements on the mean and standard deviation for each measurement.
allnames<- names(xdatanamed)
cnms<- grep("mean|std|ID", allnames)
s<-xdatanamed[,cnms]
names(s)
head(s$ID)
# Uses descriptive activity names to name the activities in the data set
s1<-merge(s, new_y_data, by.x="ID", by.y="ID")
# Uses descriptive activity names to name the activities in the data set
s1<-merge(s, new_y_data, by="ID")
# Uses descriptive activity names to name the activities in the data set
s1<-merge(s, new_y_data)
# Uses descriptive activity names to name the activities in the data set
s1<-merge(s, new_y_data, by=0)
names(s1)
s2<-merge(s1, new_subject_data, by = 0)
names(s2)
str(s2)
View(features)
features <- rbind(features,"ID")
features
View(features)
#see if the columns match before merging
all.equal(names(xtrain), names(xtest))
all.equal(names(ytrain), names(ytest))
all.equal(names(subjecttrain), names(subjecttest))
#merge the two results files
new_x_data<- rbind(xtrain, xtest)
new_x_data$ID<- seq.int(nrow(new_x_data))
#head(new_x_data, 3)
new_y_data<- rbind(ytrain, ytest)
new_y_data$ID<- seq.int(nrow(new_y_data))
#head(new_y_data, 3)
dim(new_y_data)
dim(new_x_data)
new_subject_data<- rbind(subjecttrain, subjecttest)
new_subject_data$ID<- seq.int(nrow(new_subject_data))
dim(new_subject_data)
#put the feature name as a column heading
#features file is the 561 column names
features <- read.table("features.txt", stringsAsFactors = FALSE)
features <- rbind(features,"ID")
#copying the dataset and adding names to columns
xdatanamed<- new_x_data
names(xdatanamed)<- features$V2
#xdatanamed$ID<- seq.int(nrow(xdatanamed))
dim(xdatanamed)
head(xdatanamed$ID)
#Combine the x and y data
x_y_combined<- merge(xdatanamed, new_y_data, by.x=562, by.y=2)
#combine the xy with subject
xyscombined<- merge(x_y_combined,new_subject_data, by="ID")
#Combine the x and y data
x_y_combined<- merge(xdatanamed, new_y_data, by.x=562, by.y=2)
#Combine the x and y data
x_y_combined<- merge(xdatanamed, new_y_data)
# Extracts only the measurements on the mean and standard deviation for each measurement.
allnames<- names(xdatanamed)
cnms<- grep("mean|std|ID", allnames)
s<-xdatanamed[,cnms]
# Uses descriptive activity names to name the activities in the data set
s1<-merge(s, new_y_data, by=0)
names(s1)
s2<-merge(s1, new_subject_data, by = 0)
names(s2)
str(s2)
head(s2)
new_x_data[1:10,1,562]
new_x_data[1:10,c(1,562)]
s2[1:10,c(1,562)]
s2[1:10,c(1,86)]
s2[10,]
#read files
xtest <- read.table("test/X_test.txt")
xtrain<- read.table("train/X_train.txt")
ytest <- read.table("test/Y_test.txt")
ytrain<- read.table("train/Y_train.txt")
subjecttest<-read.table("test/subject_test.txt")
subjecttrain<-read.table("train/subject_train.txt")
View(new_x_data)
#see if the columns match before merging
all.equal(names(xtrain), names(xtest))
all.equal(names(ytrain), names(ytest))
all.equal(names(subjecttrain), names(subjecttest))
#merge teh files and add an index to the merged files
new_x_data<- rbind(xtrain, xtest)
new_x_data$ID<- seq.int(nrow(new_x_data))
new_y_data<- rbind(ytrain, ytest)
new_y_data$ID<- seq.int(nrow(new_y_data))
new_subject_data<- rbind(subjecttrain, subjecttest)
new_subject_data$ID<- seq.int(nrow(new_subject_data))
#put the feature name as a column heading
#features file is the 561 column names
features <- read.table("features.txt", stringsAsFactors = FALSE)
features <- rbind(features,"ID")
#copying the dataset and adding names to columns
xdatanamed<- new_x_data
names(xdatanamed)<- features$V2
xdatanamed[1:5,1:5]
ntest[1:5,1:5]
xtest[1:5,1:5]
xtrain[1:5,1:5]
xtrain[1:5,ID]
xtrain[1:5,"ID"]
xtest[1:5,"ID"]
xdatanamed[1:5,"ID"]
new_y_data[1:5,"ID"]
new_y_data[1:5,]
#Combine the x and y data
x_y_combined<- merge(xdatanamed, new_y_data)
#Combine the x and y data
x_y_combined<- merge(xdatanamed, new_y_data, by="ID")
#Combine the x and y data
x_y_combined<- merge(xdatanamed, new_y_data, by="row.names")
#Combine the x and y data
x_y_combined<- merge(xdatanamed, new_y_data, by.x="ID", by.y="ID")
#add activities column from Y table to the x table
activities<-read.table("activity_labels.txt")
names(activities)<-c("activitycode","activityname")
new_y_data[1:10,]
#activities
names(new_y_data)<-c("activitycode","ID")
new_y_data[1:10,]
#add the activity name from Y file code to the x measurement file
allydata<- merge(new_y_data,activities,sort=F)
head(allydata)
#Combine the x and y data
x_y_combined<- merge(xdatanamed, new_y_data, by.x="ID", by.y="ID")
# Extracts only the measurements on the mean and standard deviation for each measurement.
allnames<- names(xdatanamed)
cnms<- grep("mean|std|ID", allnames)
s<-xdatanamed[,cnms]
#Combine the x and y data
x_y_combined<- merge(s, new_y_data, by.x="ID", by.y="ID")
#combine the xy with subject
xyscombined<- merge(x_y_combined,new_subject_data, by="ID")
xyscombined[1:10,]
xyscombined[1000:1010,]
new_subject_data[1:10,]
str(new_subject_data)
unique(new_subject_data)
unique(new_subject_data$V1)
#read files
xtest <- read.table("test/X_test.txt")
xtrain<- read.table("train/X_train.txt")
ytest <- read.table("test/Y_test.txt")
ytrain<- read.table("train/Y_train.txt")
subjecttest<-read.table("test/subject_test.txt")
subjecttrain<-read.table("train/subject_train.txt")
#see if the columns match before merging
all.equal(names(xtrain), names(xtest))
all.equal(names(ytrain), names(ytest))
all.equal(names(subjecttrain), names(subjecttest))
#merge teh files and add an index to the merged files
new_x_data<- rbind(xtrain, xtest)
new_x_data$ID<- seq.int(nrow(new_x_data))
new_y_data<- rbind(ytrain, ytest)
new_y_data$ID<- seq.int(nrow(new_y_data))
new_subject_data<- rbind(subjecttrain, subjecttest)
new_subject_data$ID<- seq.int(nrow(new_subject_data))
#put the feature name as a column heading
#features file is the 561 column names
features <- read.table("features.txt", stringsAsFactors = FALSE)
features <- rbind(features,"ID")
#copying the dataset and adding names to columns
xdatanamed<- new_x_data
names(xdatanamed)<- features$V2
#add activities column from Y table to the x table
activities<-read.table("activity_labels.txt")
names(activities)<-c("activitycode","activityname")
names(new_y_data)<-c("activitycode","ID")
#add the activity name from Y file code to the x measurement file
allydata<- merge(new_y_data,activities,sort=F)
head(allydata)
# Extracts only the measurements on the mean and standard deviation for each measurement.
allnames<- names(xdatanamed)
cnms<- grep("mean|std|ID", allnames)
s<-xdatanamed[,cnms]
#Combine the x and y data
x_y_combined<- merge(s, new_y_data, by.x="ID", by.y="ID")
#combine the xy with subject
xyscombined<- merge(x_y_combined,new_subject_data, by="ID")
#rename subject
name(xyscombined$V1)<-"subjectid"
#rename subject
names(xyscombined$V1)<-"subjectid"
names(xyscombined)
#rename subject
col.name(xyscombined$V1)<-"subjectid"
#rename subject
col.name(xyscombined[82])<-"subjectid"
#rename subject
names(xyscombined)[86]<- "subjectid"
#rename subject
names(xyscombined)[82]<- "subjectid"
names(xyscombined)
# From the data set in step 4, creates a second, independent tidy data set with the average of each variable for each activity and each subject.
str(xyscombined)
# From the data set in step 4, creates a second, independent tidy data set with the average of each variable for each activity and each subject.
sumarise(xyscombined)
# From the data set in step 4, creates a second, independent tidy data set with the average of each variable for each activity and each subject.
databyactivityandsubject<- group_by(data=xyscombined, activitycode, subjectid)
resultdata<- xyscombined%>%
group_by(activitycode, subjectid)%>%
summarize(count = n(),unique = n_distinct(subjectid),subjects = n_distinct(subjectid),average_value = mean()) %>%
arrange(subjectid, activitycode)
resultdata<- xyscombined %>% group_by(activitycode, subjectid)%>%
summarize(count = n(),unique = n_distinct(subjectid),subjects = n_distinct(subjectid),average_value = mean()) %>%
arrange(subjectid, activitycode)
library(dplyr)
resultdata<- xyscombined %>% group_by(activitycode, subjectid)%>%
summarize(count = n(),unique = n_distinct(subjectid),subjects = n_distinct(subjectid),average_value = mean()) %>%
arrange(subjectid, activitycode)
resultdata<- group_by(xyscombined, c(activitycode, subjectid))
# From the data set in step 4, creates a second, independent tidy data set with the average of each variable for each activity and each subject.
resultdata<- group_by(xyscombined, activitycode)
summarize(resultdata,
count = n(),
subjects_tested = n_distinct(subjectid)
)
# From the data set in step 4, creates a second, independent tidy data set with the average of each variable for each activity and each subject.
resultdata<- group_by(xyscombined, subjectid, activityname)
# From the data set in step 4, creates a second, independent tidy data set with the average of each variable for each activity and each subject.
resultdata<- group_by(xyscombined, subjectid, activitycode)
summarize(resultdata,
count = n(),
subjects_tested = n_distinct(subjectid)
)
# From the data set in step 4, creates a second, independent tidy data set with the average of each variable for each activity and each subject.
resultdata<- group_by(xyscombined, subjectid, activitycode)
summarize(resultdata,
)
summarize(resultdata,
)
summarize(resultdata
)
aggregate(xyscombined)
aggregate(xyscombined, by=c(subjectid, activitycode), FUN=mean)
aggregate(xyscombined, by=c("subjectid", "activitycode"), FUN=mean)
aggregate(xyscombined, list(breakout=subjectid.activitycode), mean)
aggregate(xyscombined, list("subjectid","activitycode""), mean)
aggregate(xyscombined, list("subjectid","activitycode"), mean)
print(resultdata)
aggregate(xyscombined, list("subjectid","activitycode"), mean)
aggregate(xyscombined)
aggregate(xyscombined, mean)
aggregate(xyscombined, FUN=mean)
aggregate(xyscombined, by=subjectid ,FUN=mean)
aggregate(xyscombined, by="subjectid" ,FUN=mean)
aggregate(xyscombined, by=list("subjectid") ,FUN=mean)
aggregate(data=xyscombined, by=list("subjectid") ,FUN=mean)
aggregate(subjectid~activitycode,data=xyscombined ,FUN=mean)
aggregate(.~activitycode,data=xyscombined ,FUN=mean)
aggregate(.~subjectid+activitycode,data=xyscombined ,FUN=mean)
aggregate(.~activitycode+subjectid,data=xyscombined ,FUN=mean)
resultsdata<-aggregate(.~activitycode+subjectid,data=xyscombined ,FUN=mean)
print(resultdata)
aggregate(.~activitycode+subjectid,data=xyscombined ,FUN=mean)
# From the data set in step 4, creates a second, independent tidy data set with the average of each variable for each activity and each subject.
r1<-aggregate(.~activitycode+subjectid,data=xyscombined ,FUN=mean)
# save a data frame to local drive
write.table(r1, file = "summary_data_file.txt", row.names = FALSE)
print(r1)
#read files
xtest <- read.table("test/X_test.txt")
xtrain<- read.table("train/X_train.txt")
ytest <- read.table("test/Y_test.txt")
ytrain<- read.table("train/Y_train.txt")
subjecttest<-read.table("test/subject_test.txt")
subjecttrain<-read.table("train/subject_train.txt")
#see if the columns match before merging
all.equal(names(xtrain), names(xtest))
all.equal(names(ytrain), names(ytest))
all.equal(names(subjecttrain), names(subjecttest))
#merge the files and add an index to the merged files
new_x_data<- rbind(xtrain, xtest)
new_x_data$ID<- seq.int(nrow(new_x_data))
new_y_data<- rbind(ytrain, ytest)
new_y_data$ID<- seq.int(nrow(new_y_data))
new_subject_data<- rbind(subjecttrain, subjecttest)
new_subject_data$ID<- seq.int(nrow(new_subject_data))
# Uses descriptive activity names to name the activities in the data set
#put the feature name as a column heading
#features file is the 561 column names
features <- read.table("features.txt", stringsAsFactors = FALSE)
features <- rbind(features,"ID")
#copying the dataset and adding names to columns
xdatanamed<- new_x_data
names(xdatanamed)<- features$V2
#add activities column from Y table to the x table
activities<-read.table("activity_labels.txt")
names(activities)<-c("activitycode","activityname")
names(new_y_data)<-c("activitycode","ID")
#add the activity name from Y file code to the x measurement file
allydata<- merge(new_y_data,activities,sort=F)
head(allydata)
# Extracts only the measurements on the mean and standard deviation for each measurement.
allnames<- names(xdatanamed)
cnms<- grep("mean|std|ID", allnames)
s<-xdatanamed[,cnms]
#Combine the x and y data
x_y_combined<- merge(s, new_y_data, by.x="ID", by.y="ID")
#combine the xy with subject
xyscombined<- merge(x_y_combined,new_subject_data, by="ID")
#rename subject
names(xyscombined)[82]<- "subjectid"
names(xyscombined)
head(s)
head(new_y_data)
head(allydata)
#Combine the x and y data
x_y_combined<- merge(s, allydata, by.x="ID", by.y="ID")
#combine the xy with subject
xyscombined<- merge(x_y_combined,new_subject_data, by="ID")
#rename subject
names(xyscombined)[82]<- "subjectid"
names(xyscombined)
#head(s)
#head(new_y_data)
#Combine the x and y data
x_y_combined<- merge(s, allydata, by.x="ID", by.y="ID")
#combine the xy with subject
xyscombined<- merge(x_y_combined,new_subject_data, by="ID")
#rename subject
names(xyscombined)[83]<- "subjectid"
names(xyscombined)
# From the data set in step 4, creates a second, independent tidy data set with the average of each variable for each activity and each subject.
r1<-aggregate(.~activityname+subjectid,data=xyscombined ,FUN=mean)
# save a data frame to local drive
write.table(r1, file = "summary_data_file.txt", row.names = FALSE)
print(r1)
unique(r1$activityname)
names(r1)
write.table(names(r1), file="codebook_data_list.txt", row.names=F)
write.table(unique(r1$activityname),file="activity_names.txt", row.names=F)
